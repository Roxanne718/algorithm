# ================================================================
# 开盲盒:一组n个玩偶,每个盒子等概率放一个,集齐n个期望买多少盒
# ================================================================
# solution1：期望DP
# 状态：dp[i]表示已经有i种玩偶的前提下，集齐n个需要买的盲盒数的期望
# 状态转移：dp[i] = 1(cost) + p(买到新的)*dp[i+1] + p(买到旧的)*dp[i]
# 起点: dp[n]=0, 终点:dp[0]=?
# ================================================================
# solution2:几何分布(几何分布的无后效性、几何分布期望为1/p)
# 定义随机变量X{i}为买到i个不同玩偶时，立即停止买盲盒的期望
# dp[i] = dp[i-1] + n/(n-i+1)
# ================================================================

def solution1(n = 100):
    dp = [0 for _ in range(n+1)] # dp[i]表示已经有i种玩偶的前提下，集齐n个需要买的盲盒数的期望
    dp[n] = 0.0

    for i in range(n-1, -1, -1):
        dp[i] = dp[i+1] + (n/(n-i))
        # print(i, dp[i])
        
    print(dp[0])

def solution2(n=100):
    dp = [0 for _ in range(n+1)]
    dp[0] =0.0
    for i in range(1,n+1):
        dp[i] = dp[i-1] + n/(n-i+1)
    print(dp[n])

solution1()
solution2()